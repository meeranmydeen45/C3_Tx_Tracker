#pragma checksum "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0f6faf4b667dfba0aa1717e1fa169778654eb88e"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\_ViewImports.cshtml"
using Web_Core_C3_App;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\_ViewImports.cshtml"
using Web_Core_C3_App.Models;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f6faf4b667dfba0aa1717e1fa169778654eb88e", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"515f424c0fed070628d633045ac34bd20c656c5e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("href", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-ui.css"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("rel", new global::Microsoft.AspNetCore.Html.HtmlString("stylesheet"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/js/jquery-ui.js"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "-1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "1", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "2", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("value", "3", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 1 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    Layout = null;

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html lang=\"en\">\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e6023", async() => {
                WriteLiteral(@"
    <title>C3 App</title>
    <meta charset=""utf-8"">
    <meta name=""viewport"" content=""width=device-width, initial-scale=1"">
    <link rel=""stylesheet"" href=""https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css"" />
    <link rel=""stylesheet"" href=""https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css"">
    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("link", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "0f6faf4b667dfba0aa1717e1fa169778654eb88e6631", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n\r\n    <script src=\"https://code.jquery.com/jquery-1.12.4.js\"></script>\r\n    <script src=\"https://code.jquery.com/ui/1.12.1/jquery-ui.js\"></script>\r\n    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("script", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e7967", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral(@"

    <script src=""https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js""></script>
    <script src=""https://maxcdn.bootstrapcdn.com/bootstrap/4.4.1/js/bootstrap.min.js""></script>
    <script src=""https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.3.4/jspdf.min.js""></script>

    <style>
        #divBox {
            margin-left: 0px;
            margin-top: 25px;
        }

        #divEmployee {
            width: 300px;
            position: absolute;
            top: 230px;
            left: 600px;
        }

        #tableUpdateRcvdCards {
            border: 1px solid blue;
        }

        table {
            width: 75%;
            border: 1px solid black;
        }

        tr {
        }


        td {
        }

        .headerRowStyle {
            text-align: center;
            margin: auto;
            color: greenyellow;
            font-weight: bold;
            background-color: black;
        }

        .footerRowStyle {
        ");
                WriteLiteral(@"    text-align: center;
            border-bottom: 1px solid black;
            color: blueviolet;
            margin: auto;
            height: 10px;
        }

        .employeeReportStyleHeaderRow-td {
            text-align: center;
            border: 1px solid black;
            color: blue;
            font-weight: bold;
            background-color: lightgray;
        }

        .employeeReportStyle-td {
            text-align: center;
            border: 1px solid black;
            color: blueviolet;
            margin: auto;
            height: 10px;
        }

        #autoTxtBox {
            margin-top: 30px;
            justify-content: center;
        }

        #divTableDelieveredCards {
            margin-top: 30px;
            justify-content: center;
        }

        #autoTxtBox {
            margin-top: 10px;
            justify-content: center;
            width: 300px;
        }

        #divNoData {
            padding: 70px 0;
            tex");
                WriteLiteral(@"t-align: center;
            font-weight: bold;
            font-size: 40px;
            color: blue;
        }

        #dropDownCompany {
            overflow: auto;
        }

        #totalCards {
            font-size: 20px;
        }
    </style>
    <script>
        $(document).ready(function () {
            //region strats

            var txtEmployee = $('#txtEmployee');
            var countEmp = 0;
            var companyId = '';
            var cardStatus = '';
            var fromDate = '';
            var toDate = '';
            //Update Rcvd Cards - Separate Function in used in Initial Page Load
            // & Posting Update Rcvd Cards and Creating Table Value
            function UpdateCards() {

            $.ajax({
                type: 'Get',
                url: '");
#nullable restore
#line 133 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                 Write(Url.Action("UpdateRcvdCards_Get", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                dataType: 'Json',
                contentType:'applicaton/json;charset= utf-8',
                success: function (response) {

                    var table = $('#tableUpdateRcvdCards');
                    table.empty();
                    var companyRow = '';
                    var employeeRow = '';
                    $(response).each(function (index, company) {

                        //headerRow = '<th><td>Company Name</td><td>Mobile Number</td><td>Number of Employees</td></th>';
                        //employees.length == 0 : Needs to avoid displaying company Name
                        if (company.employees.length > 0) {
                         //table.append(headerRow);
                        companyRow = '<tr class=""headerRowStyle""><td><input type=""checkbox"" name=""' + company.companyCode +'_headerChBox"" /></td><td>' + company.companyName + '</td><td> Mob: ' + company.mobileNumber + '</td><td> No of Cards: ' + company.employees.length + '</td></tr>';
       ");
                WriteLiteral(@"                 table.append(companyRow);
                        $(company.employees).each(function (index, emp) {

                            employeeRow = '<tr class=""footerRowStyle""><td><input type=""checkbox""  name=""' + company.companyCode +'"" id=""'+emp.id+'""></td><td>' + emp.employeeName +'</td><td></td><td></td></tr>';
                          table.append(employeeRow);


                        });
                        }

                    });



                },
                error: function (err) {

                    alert(""Error Occured while updating Cards"");
                }
            });
            }

            function GetAvailableCards(){
                 $.ajax({
                type: 'Get',
                url: '");
#nullable restore
#line 174 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                 Write(Url.Action("AvailableCards_Get", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                dataType: 'Json',
                contentType:'applicaton/json;charset= utf-8',
                success: function (response) {

                    var table = $('#tableDeliveredCards');
                    table.empty();
                    var companyRow = '';
                    var employeeRow = '';
                    $(response).each(function (index, company) {

                        //headerRow = '<th><td>Company Name</td><td>Mobile Number</td><td>Number of Employees</td></th>';
                        //employees.length == 0 : Needs to avoid displaying company Name
                        if (company.employees.length > 0) {
                         //table.append(headerRow);
                            companyRow = '<tr class=""headerRowStyle""><td><input type=""checkbox"" name=""' + company.companyCode + '_headerChBox"" /></td><td>' + company.companyName + '</td><td> Mob: ' + company.mobileNumber + '</td><td> No of Cards: ' + company.employees.length + '</td></tr>';
   ");
                WriteLiteral(@"                     table.append(companyRow);
                        $(company.employees).each(function (index, emp) {

                          employeeRow = '<tr class=""footerRowStyle""><td><input type=""checkbox""  name=""' + company.companyCode + '"" id=""' + emp.id + '""></td><td>' + emp.employeeName + '</td><td></td><td></td></tr>';
                          table.append(employeeRow);


                        });
                        }

                    });



                },
                error: function (err) {

                    alert(""Error Occured while updating Cards"");
                }
            });




            }

            $('.nav-tabs a').on('shown.bs.tab', function (event) {

                var phaseValue = $(event.target).text();

                if (phaseValue == ""Pending C3"") {
                    //Responsible for Updating Rcvd Cards in Initial Page Load
                    UpdateCards();
                }
                if (phaseValue");
                WriteLiteral(" == \"Available C3\") {\r\n                    GetAvailableCards();\r\n                }\r\n                if (phaseValue == \"Reports\") {\r\n                    $.ajax({\r\n                         type: \'Get\',\r\n                         url: \'");
#nullable restore
#line 230 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                          Write(Url.Action("DropDownData_Get", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                         dataType: 'Json',
                         contentType:'applicaton/json;charset= utf-8',
                        success: function (datas) {
                            $('#dropDownCompany option').remove();
                            $('#dropDownCompany').append('<option value=""-1"">SelectCompany</option>');
                            $.each(datas, function (i, data) {

                                var option = '<option value=""' + data.id+ '"">' + data.companyName + '</option>';
                                $('#dropDownCompany').append(option);

                            })
                        },
                        error: function () {
                            alert(""Error Occured while update Dropdown data"")
                        }

                    });
                }
            });

            //Autocomplete Box to retrieve company Name in very Begining
            $('#txtCompany').autocomplete({

                minLength: 3");
                WriteLiteral(",\r\n                source: function (request, response) {\r\n                    $.ajax({\r\n                        type: \'Get\',\r\n                        url: \'");
#nullable restore
#line 258 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                         Write(Url.Action("AutoCompleteData_UpdateCards_Get", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        data: { name: request.term },
                        dataType: 'Json',
                        contentType: 'application/json;charset=utf-8',
                        success: function (data) {

                            response($.map(data, function (item) {
                                return { label: item.companyName, value: item.companyName, id: item.id, CompanyCode: item.companyCode, MobileNumber: item.mobileNumber }

                            }))

                        },
                        error: function () {
                            alert('Error Occured AutoCompleteBox');
                        }
                    });

                },
                autofocus: true,
                select: function (event, ui) {

                    $(this).val(ui.item.label)
                    $('#txtCode').val(ui.item.CompanyCode)
                    $('#txtMobile').val(ui.item.MobileNumber)
                }

            });


       ");
                WriteLiteral(@"     //Add Employees in Toast View
            $('#btnAdd').click(function () {
                countEmp += 1;
                var txtValue = txtEmployee.val();
                txtEmployee.val('');




                var toastDiv = '<div class=""toast"" id=""toastNo' + countEmp + '"" data-autohide=""false"" style=""margin:0px; background:yellow""><div class=""toast-header""><strong class=""mr-auto text-primary"">' + txtValue + '</strong><button type=""button"" id=""' + countEmp + '"" class=""ml-2 mb-1 close"" data-dismiss=""toast"">&times;</button></div></div>';

                $('#divEmployee').append(toastDiv);

                $('.toast').toast('show');

                $('.toast').on('click', 'button', function () {

                    var x = $(this).attr('id');
                    $('#toastNo' + x).remove();
                });


            });
            // Store Company Name and Employee in the VeryFirst:
            $('#btnStore').click(function () {

                var CompanyName = $('#");
                WriteLiteral(@"txtCompany').val();
                var CompanyCode =  $('#txtCode').val();
                var CompanyMobile = $('#txtMobile').val();
                var Link = $('#txtLink').val();




                var EmployeeList = [];
                $('.toast').each(function(){
                    var textName = $(this).text().toString().trim();
                    var textLength = textName.length;
                    var empName = textName.substr(0, textLength - 1);

                    if (empName != """")
                    EmployeeList.push(empName);
                });

                if (CompanyName.trim().length >= 2) {


                    $.ajax({
                        type: 'Post',
                        url: '");
#nullable restore
#line 336 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                         Write(Url.Action("AddCompanies","Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        data: { EmployeeList: EmployeeList, CompanyName: CompanyName, CompanyCode: CompanyCode, CompanyMobile: CompanyMobile },
                        dataType: 'Json',
                        success: function (response) {
                            UpdateCards();
                            alert(response);
                            var r = confirm(""Do you want send E-mail?"");
                            if (r == true) {
                                NumberofEmployee = EmployeeList.length;
                                $.ajax({
                                    type: 'Get',
                                    url: '");
#nullable restore
#line 347 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                                     Write(Url.Action("SendEmail","Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                                    data: { CompanyName: CompanyName, Link: Link, NumberofEmployee: NumberofEmployee },
                                    dataType: 'Json',
                                    success: function (response) {

                                        alert(response);

                                    },
                                    error: function () { }
                                });
                            }
                            else { }
                        },
                        error: function (err) {
                            alert(""Error Occured"");
                        }
                    });


                    $('#txtCompany').val('');
                    $('#txtCode').val('');
                    $('#txtMobile').val('');
                    $('#txtLink').val('');
                    $('#divEmployee').text('');
                } else {
                    alert('Please check your Details to process fu");
                WriteLiteral(@"rther!!')
                }

            });



            var $checkBox = $('input[type=""checkbox""]');
            //check Box Selection: in Update Rcvd Cards
            $('#tableUpdateRcvdCards').on(""click"", $checkBox, function (e) {

                var chBoxName = e.target.name;
                var isChecked = $('input[name=""' + chBoxName + '""]:checked').length;

                // IF - when any checkBoxes Checked
                if (isChecked > 0) {
                        var chBoxNameSplit = chBoxName.split('_');

                    if (chBoxNameSplit.length > 1) {
                        //Head Box - checked
                        var ChxHeaderValue = chBoxNameSplit[0].trim();
                        var childBoxObj = $('input[name=""' + ChxHeaderValue + '""]');
                        $(childBoxObj).each(function () {
                            $(this).prop('checked', true);
                        });

                    }
                    else {
                  ");
                WriteLiteral(@"          //child Box - checked
                            var chBoxAll = $('input[name=""' + chBoxName + '""]');
                            var chBoxChecked = $('input[name=""' + chBoxName + '""]:checked');

                            if (chBoxAll.length == chBoxChecked.length) {
                            $('input[name=""' + chBoxName + '_headerChBox""]').prop('checked', true)

                            }
                            else {

                               $('input[name=""' + chBoxName + '_headerChBox""]').prop('checked', false);
                            }

                        }
                }
                // Else - When any CheckBoxes unchecked
                else {
                    var splitName =  chBoxName.split('_');
                    if (splitName.length > 1) {
                        //headerBox  unchecked
                        var childBox = $('input[name=""' + splitName[0].trim() + '""]');

                        $(childBox).each(function () {");
                WriteLiteral(@"
                            $(this).prop('checked', false);
                        });
                    }
                    else {
                        //childBox unchecked
                        $('input[name=""' + chBoxName + '_headerChBox""]').prop('checked', false);
                    }

                }


            });

            // Storing the Rcvd Cards using Check-Box

            $('#btnUdRcvdCards').click(function () {

                if ($('input[type=""checkbox""]:checked').length > 0) {

                        var $chkboxall = $('input[type=""checkbox""]');
                        var Employeeids = [];
                        $chkboxall.each(function () {

                            if ($(this).is(':checked')) {

                                var x = $(this).attr('id')
                                if (x != null) {
                                    Employeeids.push(x);
                                }

                            }



       ");
                WriteLiteral("                 });\r\n\r\n\r\n                    $.ajax({\r\n                        url: \'");
#nullable restore
#line 461 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                         Write(Url.Action("UpdateRcvdCards_Post", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        type: 'Post',
                        data: { Employeeids: Employeeids},
                        success: function (response) {


                            UpdateCards();
                            $('#tableforPDF').text('');
                            var doc = new jsPDF();
                            var tableforPDF = $('#tableforPDF');
                            var companyName = null;
                            var count = 0;
                            $(response).each(function (index, data) {
                                //Generating PDF for Updated Cards
                                if (companyName != data.companyName ) {

                                    var headerRow = '<tr><th>' + data.companyName + '</td><td>No of Cards: ' + data.totalCount +'</td></th>';
                                    tableforPDF.append(headerRow);


                                }
                                count += 1;
                                var ");
                WriteLiteral(@"row = '<tr><td>' + data.empName  + '</td><td></td></tr>';
                                companyName = data.companyName;
                                tableforPDF.append(row);
                            });

                            var spanText = 'We have Rcvd ' + count + ' of Cards';
                            $('#totalCards').text(spanText);

                            doc.fromHTML($('#divTableforPDF').html(), 10, 10, {
                                ""width"": 120
                            });
                            doc.save('doc.pdf');
                           // doc.autoPrint();
                        },
                        error: function (err) { }
                    });
                }
            });

            // ----Phase 3 => Available Cards &  Update Delivered Cards

            $('#autoTxtBox').autocomplete({
                minLength: 3,
                source: function (request, response) {
                    $.ajax({
                       ");
                WriteLiteral(" type: \'Get\',\r\n                        url: \'");
#nullable restore
#line 509 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                         Write(Url.Action("AutoCompleteData_UpdateCards_Get", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        data: { name: request.term },
                        dataType: 'Json',
                        contentType: 'application/json;charset=utf-8',
                        success: function (data) {

                            response($.map(data, function (item) {
                                return { label: item.companyName, value: item.companyName, id: item.id }

                            }))

                        },
                        error: function () {
                            alert('Error Occured AutoCompleteBox');
                        }
                    });

                },
                autofocus: true,
                select: function (event, ui) {
                    $(this).val(ui.item.label)
                    var id = (ui.item.id)
                    $.ajax({
                        type: 'Get',
                        url: '");
#nullable restore
#line 533 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                         Write(Url.Action("GetData_BasedonAutoComplete", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        data: { id: id},
                        dataType: 'Json',
                        contentType: 'application/json;charset=utf-8',
                        success: function (response) {
                            var table = $('#tableDeliveredCards');
                            table.empty();
                            var companyRow = '';
                            var employeeRow = '';
                            $(response).each(function (index, company) {

                                //headerRow = '<th><td>Company Name</td><td>Mobile Number</td><td>Number of Employees</td></th>';
                                //employees.length == 0 : Needs to avoid displaying company Name
                                if (company.employees.length > 0) {
                                    //table.append(headerRow);
                                    companyRow = '<tr class=""headerRowStyle""><td><input type=""checkbox"" name=""' + company.companyCode + '_headerChBox"" /></t");
                WriteLiteral(@"d><td>' + company.companyName + '</td><td> Mob: ' + company.mobileNumber + '</td><td> No of Cards: ' + company.employees.length + '</td></tr>';
                                    table.append(companyRow);
                                    $(company.employees).each(function (index, emp) {

                                        employeeRow = '<tr class=""footerRowStyle""><td><input type=""checkbox""  name=""' + company.companyCode + '"" id=""' + emp.id + '""></td><td>' + emp.employeeName + '</td><td></td><td></td></tr>';
                                        table.append(employeeRow);


                                    });
                                }

                            });


                        },
                        error: function () {
                            alert('Error Occured AutoCompleteBox');
                        }
                    });
                }


            });

            var $checkBox2 = $('input[type=""checkbox""]');
            $(");
                WriteLiteral(@"'#tableDeliveredCards').on(""click"", $checkBox2, function (e) {

                var chBoxName = e.target.name;
                var isChecked = $('input[name=""' + chBoxName + '""]:checked').length;

                // IF - when any checkBoxes Checked
                if (isChecked > 0) {
                    var chBoxNameSplit = chBoxName.split('_');

                    if (chBoxNameSplit.length > 1) {
                        //Head Box - checked
                        var ChxHeaderValue = chBoxNameSplit[0].trim();
                        var childBoxObj = $('input[name=""' + ChxHeaderValue + '""]');
                        $(childBoxObj).each(function () {
                            $(this).prop('checked', true);
                        });

                    }
                    else {
                        //child Box - checked
                        var chBoxAll = $('input[name=""' + chBoxName + '""]');
                        var chBoxChecked = $('input[name=""' + chBoxName + '""]:che");
                WriteLiteral(@"cked');

                        if (chBoxAll.length == chBoxChecked.length) {
                            $('input[name=""' + chBoxName + '_headerChBox""]').prop('checked', true)

                        }
                        else {

                            $('input[name=""' + chBoxName + '_headerChBox""]').prop('checked', false);
                        }

                    }
                }
                // Else - When any CheckBoxes unchecked
                else {
                    var splitName = chBoxName.split('_');
                    if (splitName.length > 1) {
                        //headerBox  unchecked
                        var childBox = $('input[name=""' + splitName[0].trim() + '""]');

                        $(childBox).each(function () {
                            $(this).prop('checked', false);
                        });
                    }
                    else {
                        //childBox unchecked
                        $('input[nam");
                WriteLiteral(@"e=""' + chBoxName + '_headerChBox""]').prop('checked', false);
                    }

                }


            });

            $('#btnDeliveredCards').click(function () {

                  if ($('input[type=""checkbox""]:checked').length > 0) {
                      var $chkboxall = $('input[type=""checkbox""]');
                       var Employeeids = [];
                      $chkboxall.each(function () {

                      if ($(this).is(':checked')) {

                          var x = $(this).attr('id')
                          if (x != null) {
                              Employeeids.push(x);
                          }

                      }



                    });

                    $.ajax({
                        url: '");
#nullable restore
#line 649 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                         Write(Url.Action("DeliveredCards_Post", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                        type: 'Post',
                        data: { Employeeids: Employeeids},
                        success: function (response) {

                            GetAvailableCards();
                            $('#tableforPDF').text('');
                            //var doc = new jsPDF();
                            var tableforPDF = $('#tableforPDF');
                            var companyName = null;
                            var count = 0;

                            $(response).each(function (index, data) {
                                //Generating PDF for Updated Cards
                                if (companyName != data.companyName ) {

                                    var headerRow = '<tr><th>' + data.companyName + '</th><th>No of Cards: ' + data.totalCount +'</th></tr>';
                                    tableforPDF.append(headerRow);


                                }
                                count += 1;
                            ");
                WriteLiteral(@"    var row = '<tr><td>' + data.empName  + '</td><td>Delivered</td></tr>';
                                companyName = data.companyName;
                                tableforPDF.append(row);
                            });
                           // var date = new Date().toLocaleString();
                           // var spanText = 'I have Rcvd ' + count + ' Number of Cards';
                           // var spanText2 = 'Customer signature below ';
                           // $('#totalCards').text(spanText);

                           // doc.fromHTML($('#divTableforPDF').html(), 15, 15, {
                          //      ""width"": 120
                          //  });

                            var doc = new jsPDF('p', 'pt', 'letter');
                            doc.cellInitialize();
                            doc.setFontSize(15);
                            var date = new Date().toLocaleDateString();
                            var z = 0;
                            $.each(");
                WriteLiteral(@"$('#divTableforPDF tr'), function (i, row) {
                                z += 1;
                                $.each($(row).find('th, td'), function (j, data) {

                                    var text = $(data).text().trim();
                                    doc.cell(20, 120, 250, 30, text, i);


                                });


                            });
                            doc.text(20, 50, date)
                            doc.text(20,80,""I have received the following cards."")
                            doc.save('doc.pdf');
                           // doc.autoPrint();
                        },
                        error: function (err) { }
                    });
                }
            });

            //----Phase 4 => Card Summary


            $('#txtFromDate').datepicker({

                });

            $('#txtToDate').datepicker({

            });

            function ReportTableCreation() {

                $.ajax({");
                WriteLiteral("\n                    type: \'Get\',\r\n                    url: \'");
#nullable restore
#line 726 "C:\Users\Meeran\source\repos\Web_Core_C3_App\Web_Core_C3_App\Views\Home\Index.cshtml"
                     Write(Url.Action("GetReportData", "Home"));

#line default
#line hidden
#nullable disable
                WriteLiteral(@"',
                    data: { companyId: companyId, cardStatus: cardStatus, fromDate: fromDate, toDate: toDate},
                    dataType: 'Json',
                    contentType: 'applicaton/json;charset= utf-8',
                    success: function (response) {
                        if (response.length > 0) {
                            $('#divNoData').text('');
                            if (response[0].companyName) {

                                var table = $('#cardSummaryTable');
                                table.empty();
                                var companyRow = '';
                                var employeeRow = '';
                                $(response).each(function (index, company) {

                                    //headerRow = '<th><td>Company Name</td><td>Mobile Number</td><td>Number of Employees</td></th>';
                                    //employees.length == 0 : Needs to avoid displaying company Name

                                   ");
                WriteLiteral(@" if (company.employees.length > 0) {
                                        //table.append(headerRow);
                                        companyRow = '<tr class=""headerRowStyle""><td>' + company.companyName + '</td><td>No of Employees: ' + company.employees.length + '</td></tr>';
                                        table.append(companyRow);
                                        $(company.employees).each(function (index, emp) {

                                            employeeRow = '<tr class=""footerRowStyle""><td></td><td>' + emp.employeeName + '</td></tr>';
                                            table.append(employeeRow);


                                        });
                                    }

                                });

                            }
                            else if (response.length > 0) {
                                $('#divNoData').text('');
                                var table = $('#cardSummaryTable');
                ");
                WriteLiteral(@"                table.empty();

                                var headerRow = '<tr class=""employeeReportStyleHeaderRow-tr""><td class=""employeeReportStyleHeaderRow-td"">EmployeeNames</td></tr>';
                                table.append(headerRow);
                                $(response).each(function (index, emp) {
                                    var row = '<tr class=""employeeReportStyle-tr""><td class=""employeeReportStyle-td"">' + emp.employeeName + '</td></tr>';
                                    table.append(row);
                                });
                            }
                        }
                        else  {
                        $('#cardSummaryTable').empty();
                            $('#divNoData').text('No Records Found!!')
                        }
                        console.log(response);
                    },
                    error: function () {
                        alert('Error Occured while updating data By CompanyName');
 ");
                WriteLiteral(@"                   }

                });
            }

            $('#dropDownStatus').change(function () {
                fromDate = $('#txtFromDate').val();
                toDate = $('#txtToDate').val();
                cardStatus = $(this).val();
                ReportTableCreation(cardStatus, companyId, fromDate, toDate);

            });
            $('#dropDownCompany').change(function () {
                fromDate = $('#txtFromDate').val();
                toDate = $('#txtToDate').val();
                companyId = $(this).val();
                ReportTableCreation(cardStatus, companyId, fromDate, toDate);

            });



        //End Region of the Script
        });

    </script>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e44527", async() => {
                WriteLiteral(@"

    <div class=""container mt-3"">
        <h2>C3 APP</h2>
        <br>
        <!-- Nav tabs -->
        <ul class=""nav nav-tabs"">
            <li class=""nav-item"">
                <a class=""nav-link active"" data-toggle=""tab"" href=""#home"">Register C3</a>
            </li>
            <li class=""nav-item"">
                <a class=""nav-link"" data-toggle=""tab"" href=""#menu1"">Pending C3</a>
            </li>
            <li class=""nav-item"">
                <a class=""nav-link"" data-toggle=""tab"" href=""#menu2"">Available C3</a>
            </li>
            <li class=""nav-item"">
                <a class=""nav-link"" data-toggle=""tab"" href=""#menu3"">Reports</a>
            </li>
        </ul>

        <div class=""tab-content"">
            <div id=""home"" class=""container tab-pane active"">
                <br>
                <h3>SendEmail</h3>
                <div id=""divBox"">
                    Company Name:
                    <input type=""text"" class=""form-control"" style=""width:300px"" id=""");
                WriteLiteral(@"txtCompany"">
                    Company Code:
                    <input type=""text"" class=""form-control"" style=""width:300px"" id=""txtCode"">
                    Mobile Number:
                    <input type=""text"" class=""form-control"" style=""width:300px"" id=""txtMobile"">
                    Employee Name:
                    <input type=""text"" class=""form-control"" style=""width:300px"" id=""txtEmployee"">
                    Paste the Link Below:
                    <textarea class=""form-control"" style=""width:300px"" rows=""3"" id=""txtLink""></textarea>
                    <br />
                    <input type=""button"" class=""btn btn-outline-primary mt-3"" value=""Add"" id=""btnAdd"">
                    <input type=""button"" class=""btn btn-outline-info mt-3"" value=""Store"" id=""btnStore"">
                </div>
                <div id=""divEmployee"">
                </div>
            </div>

            <div id=""menu1"" class=""container tab-pane fade"">
                <br />
                <h3>Update Rcv");
                WriteLiteral(@"d Card</h3>
                <table id=""tableUpdateRcvdCards"">
                </table>
                <div id=""divTableforPDF"" style=""display:none"">
                    <span id=""totalCards""></span>
                    <table id=""tableforPDF"">
                    </table>
                </div>
                <br />
                <input type=""button"" value=""Store"" id=""btnUdRcvdCards"" class=""btn btn-outline-success"">

            </div>

            <div id=""menu2"" class=""container tab-pane fade"">
                <br>
                <h3>Update Delivered Cards</h3>
                <input type=""text"" id=""autoTxtBox"" placeholder=""Search By Company Name"">
                <div id=""divTableDelieveredCards"">
                    <table id=""tableDeliveredCards""></table>
                </div>
                <div id=""divTableforPDF2"" style=""display:none"">
                    <span id=""totalCards2""></span>
                    <table id=""tableforPDF2"">
                    </table>
           ");
                WriteLiteral(@"     </div>
                <br />
                <input type=""button"" value=""Store"" id=""btnDeliveredCards"" class=""btn btn-outline-success"">
            </div>

            <div id=""menu3"" class=""container tab-pane fade"">
                <br>
                <h3>Card Summary</h3>
                <input type=""text"" id=""txtFromDate"" placeholder=""Select From Date"">
                <input type=""text"" id=""txtToDate"" placeholder=""Select To Date"">
                <select id=""dropDownStatus"">
                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e48657", async() => {
                    WriteLiteral("Select-Status");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e49908", async() => {
                    WriteLiteral("PendingCards");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_4.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_4);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e51158", async() => {
                    WriteLiteral("AvailableCards");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_5.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_5);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e52410", async() => {
                    WriteLiteral("DeliveredCards");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_6.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_6);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </select>\r\n                \r\n                <select id=\"dropDownCompany\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("option", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0f6faf4b667dfba0aa1717e1fa169778654eb88e53762", async() => {
                    WriteLiteral("Select");
                }
                );
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.OptionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper);
                __Microsoft_AspNetCore_Mvc_TagHelpers_OptionTagHelper.Value = (string)__tagHelperAttribute_3.Value;
                __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_3);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </select>\r\n                <table id=\"cardSummaryTable\">\r\n                </table>\r\n                <div id=\"divNoData\">\r\n                    </div>\r\n            </div>\r\n\r\n        </div>\r\n    </div>\r\n\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>\r\n\r\n");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
